prototype(Sfi.News:AnnouncementDetail) < prototype(Sfi.News:NewsDetail) {
	templatePath = 'resource://Sfi.News/Private/Templates/AnnouncementDetail.html'
	@override.configuration = ${Configuration.setting('Sfi.News.announcementDetail')}
	configuration = ${configuration}

	place = ${q(node).property('place')}
	dateStart = ${q(node).property('dateStart')}

	moreItems = Sfi.News:NewsRelated {
		prototype(Sfi.News:Listable) {
			collection = ${q(site).children('announcements').find('[instanceof Sfi.News:Announcement]').get()}
			collection.@process.filterByDate = ${q(value).count() > 0 ? q(value).filterByDate('date', Date.Now()).get() : value}
		}
	}
}

prototype(Sfi.News:AnnouncementShort) < prototype(Sfi.News:NewsShort) {
	templatePath = 'resource://Sfi.News/Private/Templates/AnnouncementShort.html'
	@override.configuration = ${Configuration.setting('Sfi.News.announcementShort')}
	configuration = ${configuration}

	place = ${String.stripTags(q(node).property('place'))}
	dateStart = ${q(node).property('dateStart')}
}

prototype(Sfi.News:AnnouncementsList) < prototype(Sfi.News:AbstractList) {
	@override.configuration = ${Configuration.setting('Sfi.News.announcementsList')}
	configuration = ${configuration}

	prototype(Sfi.News:Listable) {
		collection = ${q(site).children('announcements').find('[instanceof Sfi.News:Announcement]').get()}
		collection.@process.filterByDate = ${q(value).count() > 0 ? q(value).filterByDate('date', Date.Now()).get() : value}
		
		itemRenderer = Sfi.News:AnnouncementShort
	}

	@cache {
		mode = 'cached'
		maximumLifetime = '43200'
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${editPreviewMode}
			format = ${request.format}
		}
		entryTags {
			# Whenever the node changes the matched condition could change
			1 = ${'Node_' + documentNode.identifier}
			# Whenever one of the parent nodes changes the layout could change
			2 = ${'DescendantOf_' + documentNode.identifier}
		}
	}
}
