#Organism level
 
#List all articles from website
prototype(Sfi.News:List) < prototype(TYPO3.Neos:Template) {
	@override.configuration = ${Configuration.setting('Sfi.News.list')}
	#@override.configuration.@process.mergeConfiguration = ${NewsConfiguration.mergeWithNodeProperties(value, node)}
	configuration = ${configuration}


	templatePath>
	templatePath = 'resource://Sfi.News/Private/Templates/NewsList.html'
	
	#Find all nodes of type News
	newsCollection = ${q(site).find('[instanceof Sfi.News:News]').get()}
	#sort
	newsCollection.@process.sort = ${q(value).count() > 0 ? q(value).sort(configuration.sortProperty, configuration.sortOrder).get() : value}
	#limit
	newsCollection.@process.slice = ${q(value).count() > 0 ? q(value).slice(0, String.toInteger(configuration.numberOfItems)).get() : value}
	#This object will be used to render news articles
	newsItem = Sfi.News:ArticleShort
}
 
#Display full view of article
prototype(Sfi.News:Detail) < prototype(TYPO3.Neos:Template) {
	@override.configuration = ${Configuration.setting('Sfi.News.detail')}
	configuration = ${configuration}

	templatePath = 'resource://Sfi.News/Private/Templates/NewsDetail.html'
	#this will render main article
	article = Sfi.News:ArticleFull
	#pull up other relevant things:
	#...relatedArticles = ListOfRelatedArticlesObject.. you get the point
	#...comments = someCommentModule
}